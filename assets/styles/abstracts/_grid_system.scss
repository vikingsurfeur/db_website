/* Grid system */
$grid-columns: 12;

$grid-gaps: (
    '0': 0,
    '1': 1rem,
    '2': 2rem,
    '3': 3rem,
);

$layout-values: 
    flex-start,
    flex-end,
    center,
    space-between,
    space-around;

// Base Layout classes
.container {
    width: 100%;
    margin: auto;
    box-sizing: border-box;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

// Justify content classes
@each $val in $layout-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

// Grid gaps
@each $key, $val in $grid-gaps {
    .gap-#{$key} > * {
        padding: 0 #{$val};
    }

    .gap-#{$key} {
        margin: 0 -#{$val};
    }
}

// Columns classes
@include xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs {
            box-sizing: border-box;
            flex-grow: 0;
            width: calc(#{$i} / #{$grid-columns} * 100%);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm {
            box-sizing: border-box;
            flex-grow: 0;
            width: calc(#{$i} / #{$grid-columns} * 100%);
        }
    }
}

@include md {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-md {
            box-sizing: border-box;
            flex-grow: 0;
            width: calc(#{$i} / #{$grid-columns} * 100%);
        }
    }
}

@include lg {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg {
            box-sizing: border-box;
            flex-grow: 0;
            width: calc(#{$i} / #{$grid-columns} * 100%);
        }
    }
}

@include xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl {
            box-sizing: border-box;
            flex-grow: 0;
            width: calc(#{$i} / #{$grid-columns} * 100%);
        }
    }
}
